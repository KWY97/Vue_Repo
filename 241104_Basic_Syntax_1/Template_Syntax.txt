<Template Syntax>
 [지난 시간 복습]
  - DOM을 기본 구성 요소 인스턴스의 데이터에 선언적으로 바인딩(Vue Instance와 DOM을 연결)할 수 있는 
    HTML 기반 '템플릿 구문(확장된 문법 제공)'을 사용

   1. Text Interpolation
    - 데이터 바인딩의 가장 기본적인 형태
    - 이중 중괄호 구문(콧수염 구문)을 사용
    - 콧수염 구문은 해당 구성 요소 인스턴스의 msg 속성 값으로 대체
    - msg 속성이 변경될 때마다 업데이트 됨

   2. Raw HTML
    - 콧수염 구문은 데이터를 일반 텍스트로 해석하기 때문에 
      실제 HTML을 출력하려면 v-html을 사용해야함

   3. Arrtibute Bindings
    - 콧수염 구문은 HTML 속성 내에서 사용할 수 없기 때문에 v-bind를 사용
    - HTML의 id 속성 값을 vue의 dynamicId 속성과 동기화 되도록 함
    - 바인딩 값이 null이나 undefined인 경우 렌더링 요소에서 제거됨

   4. JavaScript Expressions
    - Vue는 모든 데이터 바인딩 내에서 JavaScript 표현식의 모든 기능을 지원
    - Vue 템플릿에서 JavaScript 표현식을 사용할 수 있는 위치
     1. 콧수염 구문 내부
     2. 모든 directive의 속성 값 ("v-"로 시작하는 특수 속성)

   Expressions 주의사항
    - 각 바인딩에는 하나의 단일 표현식만 포함될 수 있음
    - 표현식은 값으로 평가할 수 있는 코드 조각 (! return 뒤에 사용할 수 있는 코드여야함 !)


 [진도 시작]
  - Directive
   - 'v-' 접두사가 있는 특수 속성
   - Directive의 속성 값은 단일 JavaScript !! 표현식 !!이어야함 (v-for, v-on 제외)
   - 표현식 값이 변경될 때 DOM에 반응적으로 업데이트를 적용

  - Directive Arguments
   - 일부 directive는 directive 뒤에 콜론(":")으로 표시되는 인자를 사용할 수 있음
   - 예시: 17p

  - Directive Modifiers
   - ".(dot)"로 표시되는 특수 접미사로 directive가 특별한 방식으로 바인딩되어야함을 나타냄
   - 아래 예시의 .prevent는 발생한 이벤트에서 event.preventDefault()를 호출하도록 v-on에 지시하는 modifier
    ```
     <form v-on:submit.prevent="onSubmit">
       <input type="submit">
     </form>
    ```

    






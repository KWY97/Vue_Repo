<Single Root Element>
 - 모든 컴포넌트에는 최상단 HTML 요소가 작성되는 것이 권장
  - 가독성, 스타일링, 명확한 컴포넌트 구조를 위해 각 컴포넌트에는
    최상단 HTML 요소를 작성해야함 (Single Root Element)


<CSS scoped> (84p ~ 86p 예시 잘 보면서 이해하면 될 듯)
 - scoped 속성을 사용하면 해당 CSS는 현재 컴포넌트의 요소에만 적용됨
  - 부모 컴포넌트의 스타일이 자식 컴포넌트로 유출되지 않음 
  - 사용하지 않으면 모든 컴포넌트에 영향을 미침

 - 그러나 자식 컴포넌트의 최상위 요소(root element)는 
   부모 CSS와 본인 CSS 모두에게서 영향을 받음
  - 자식 컴포넌트의 최상위 요소는 부모에서 사용되기 때문
 => 이는 부모가 레이아웃 목적으로 자식 컴포넌트 최상위 요소의 스타일을 
    지정할 수 있도록 의도적으로 설계된 것

 - 최상위 App 컴포넌트에서 레이아웃 스타일을 전역적으로 구성할 수 있지만, 
   다른 모든 컴포넌트는 범위가 지정된 스타일을 사용하는 것을 권장

  So, Tag(ex. div, h1 등)로 선택하지 말고 class 선택자 같은 것 써서 스타일 적용 범위를 잘 지정하자


<Scaffolding>
 - 새로운 프로젝트나 모듈을 시작하기 위해 초기 구조와 기본 코드를 자동으로 생성하는 과정
 - 개발자들이 프로젝트를 시작하는 데 도움을 주는 틀이나 기반을 제공하는 작업
 - 초기 설정, 폴더 구조, 파일 템플릿, 기본 코드 등을 자동으로 생성하여 
   개발자가 시작할 때 시간과 노력을 절약하고 일관된 구조를 유지할 수 있도록 도와줌


“관심사항의 분리가 파일 유형의 분리와 동일한 것이 아니다.”
 - "HTML/CSS/JS를 한 파일에 혼합하는게 괜찮을까?"
 => 프론트엔드 앱의 사용 목적이 점점 더 복잡해짐에 따라, 단순 파일 유형으로만
    분리하게 될 경우 프로젝트의 목표를 달성 하는데 도움이 되지 않게 됨
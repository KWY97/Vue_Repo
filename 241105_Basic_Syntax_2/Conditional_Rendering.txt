<Conditional Rendering>

v-if
 - 표현식의 값이 true/false를 기반으로 요소를 조건부로 렌더링 (예시: 교재 21p)

 [실습코드 02 같이 보면서 공부하기. 아래 순서대로 코드있음]
 - 'v-if' directive를 사용하여 조건부로 렌더링

 - 'v-else' directive를 사용하여 v-if에 대한 else 블록을 나타낼 수 있음

 - 'v-else-if' directive를 사용하여 v-if에 대한 else if 블록을 나타낼 수 있음

 - 여러 요소에 대한 v-if 적용
  - HTML template 요소에 v-if를 사용하여 하나 이상의 요소에 대해 적용할 수 있음
  - HTML <template> element
   - ! 페이지가 로드될 때 렌더링 되지 않지만 ! JavaScript를 사용하여 나중에 문서에서 사용할 수 
     있도록 하는 HTML을 보유하기 위한 메커니즘 (보이지 않는 wrapper 역할)

 - v-if vs v-show
  - v-show
   - 표현식 값의 true/false를 기반으로 요소의 가시성(visibility)을 전환 (예시: 교재 29p)
   - v-show 요소는 항상 DOM에 렌더링 되어있음
   - CSS display속성만 none으로 전환하기 때문

  [v-if, v-show의 적절한 사용처]
  - v-if (Cheap initial load, expensive toggle)
   - 초기 조건이 false인 경우 아무 작업도 수행하지 않음
   - 토글 비용이 높음 
   
  - v-show (Expensive initial load, cheap toggle)
   - 초기 조건에 관계 없이 항상 렌더링
   - 초기 렌더링 비용이 더 높음
   
  => 콘텐츠를 매우 자주 전환해야 하는 경우에는 v-show를, 
     실행 중에 조건이 변경되지 않는 경우에는 v-if를 권장

  ```
  <div id="app">
    <!-- if else -->
    <p v-if="isSeen">true일때 보여요</p>
    <p v-else>false일때 보여요</p>
    <button @click="isSeen = !isSeen">토글</button>

    <!-- else if -->
    <div v-if="name === 'Alice'">Alice입니다</div>
    <div v-else-if="name === 'Bella'">Bella입니다</div>
    <div v-else-if="name === 'Cathy'">Cathy입니다</div>
    <div v-else>아무도 아닙니다.</div>

    <!-- v-if on <template> -->
    <template v-if="name === 'Cathy'">
      <div >Cathy입니다</div>
      <div>나이는 30살입니다</div>
    </template>

    <!-- v-show -->
    <div v-show=""isShow>v-show</div>
  </div>
  ```